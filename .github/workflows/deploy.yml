name: Build and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      force_rebuild:
        description: 'Force rebuild all artifacts'
        required: false
        default: false
        type: boolean

# Prevent concurrent deployments
concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: '3.11'
  NODE_VERSION: '18'
  R2_PUBLIC_URL: https://pub-4e99d31d19cb404d8d4f5f7efa51ef6e.r2.dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    permissions:
      contents: write
      pages: write
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y poppler-utils
      
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: frontend/package-lock.json
      
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            processor/.venv
            ~/.cache/pip
          key: ${{ runner.os }}-deps-${{ hashFiles('processor/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-deps-
      
      - name: Cache PDFs
        uses: actions/cache@v3
        with:
          path: content/pdfs/**/*.pdf
          key: ${{ runner.os }}-pdfs-${{ hashFiles('content/pdfs/**/*.md') }}
          restore-keys: |
            ${{ runner.os }}-pdfs-
      
      - name: Cache build artifacts
        uses: actions/cache@v3
        with:
          path: |
            processor/.build_cache.json
            processor/artifacts/
            frontend/public/artifacts/
          key: ${{ runner.os }}-artifacts-${{ hashFiles('content/pdfs/**/*.md', 'processor/**/*.py') }}
          restore-keys: |
            ${{ runner.os }}-artifacts-
      
      - name: Setup Python environment
        working-directory: processor
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -e .
          pip install --upgrade "natural-pdf[all] @ git+https://github.com/jsoma/natural-pdf.git"
          pip install easyocr
          pip install doclayout_yolo
          pip install surya-ocr<0.15
          
      - name: Download missing PDFs
        working-directory: processor
        env:
          R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
        run: |
          pip install boto3
          python scripts/download_pdfs_from_r2_sync.py
      
      - name: Check if processor rebuild needed
        id: check-rebuild
        run: |
          # Check manual force rebuild input
          if [[ "${{ inputs.force_rebuild }}" == "true" ]]; then
            echo "REBUILD_NEEDED=true" >> $GITHUB_OUTPUT
            echo "Manual force rebuild requested"
          # For non-push events or initial commits, always rebuild
          elif [[ "${{ github.event_name }}" != "push" ]] || [[ "${{ github.event.before }}" == "0000000000000000000000000000000000000000" ]]; then
            echo "REBUILD_NEEDED=true" >> $GITHUB_OUTPUT
            echo "Non-push event or initial commit, will force rebuild"
          # Check if any processor Python files have changed
          elif git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "processor/.*\.py$"; then
            echo "REBUILD_NEEDED=true" >> $GITHUB_OUTPUT
            echo "Processor files changed, will force rebuild"
          else
            echo "REBUILD_NEEDED=false" >> $GITHUB_OUTPUT
            echo "No processor changes detected"
          fi
      
      - name: Build processor artifacts
        working-directory: processor
        run: |
          source .venv/bin/activate
          if [[ "${{ steps.check-rebuild.outputs.REBUILD_NEEDED }}" == "true" ]]; then
            echo "Force rebuilding due to processor changes..."
            python build.py rebuild
          else
            python build.py build
          fi
      
      - name: Build frontend
        working-directory: frontend
        run: |
          npm ci
          npm run build
      
      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: frontend/dist
          publish_branch: gh-pages
          force_orphan: true
          commit_message: Deploy ${{ github.sha }}